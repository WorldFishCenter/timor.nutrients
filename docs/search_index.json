[["index.html", "Fishery nutrient profiles provide a practical tool for nutrition-sensitive fisheries management 1 Content", " Fishery nutrient profiles provide a practical tool for nutrition-sensitive fisheries management Lorenzo Longobardi Last update: 2025-01-09 1 Content This book contains the code and the results for the study ‘Fishery nutrient profiles provide a practical tool for nutrition-sensitive fisheries management’. All data and code to generate the analyses are in organised in this repository. The repository is a R package and contains both the data used for the analysis and the code used to generate the results. In order to replicate the analyses you can clone the repo and run the code. "],["highlight.html", "2 Timor-Est nutritional maps", " 2 Timor-Est nutritional maps Code bonds &lt;- sf::st_as_sf(timor.nutrients::timor_bonds) region_nutr &lt;- timor.nutrients::map_data %&gt;% dplyr::rename(region = area) %&gt;% dplyr::filter(!region == &quot;National&quot;) %&gt;% dplyr::mutate(region = ifelse(region == &quot;Liquiça&quot;, &quot;Liquica&quot;, region)) %&gt;% dplyr::right_join(bonds, by = c(&quot;region&quot;)) p1 &lt;- ggplot(data = region_nutr) + geom_sf(aes(geometry = geometry, fill = annual_catch), color = &quot;white&quot;, linewidth = 0.5 ) + theme_void() + geom_sf_text(aes(label = region, geometry = geometry), size = 3, color = &quot;grey50&quot;, fontface = &quot;bold&quot;) + # scale_fill_viridis_c(option = &quot;viridis&quot;, direction = -1, begin = 0.3, end = 1, alpha = 0.7) + scale_fill_distiller(palette = &quot;YlGnBu&quot;, direction = 1) + guides(alpha = &quot;none&quot;) + coord_sf(expand = FALSE) + theme( legend.position = &quot;bottom&quot;, legend.key.width = unit(1, &quot;cm&quot;), panel.grid = element_blank(), axis.ticks = element_blank(), axis.title = element_blank(), axis.text = element_blank() ) + labs( fill = &quot;Metric tons&quot; ) p2 &lt;- ggplot() + geom_sf( data = region_nutr %&gt;% dplyr::filter(!region == &quot;Atauro&quot;), mapping = aes(geometry = geometry, fill = WRA), color = &quot;white&quot;, linewidth = 0.5 ) + geom_sf( data = region_nutr %&gt;% dplyr::filter(region == &quot;Atauro&quot;), mapping = aes(geometry = geometry), fill = &quot;firebrick&quot;, color = &quot;white&quot;, linewidth = 0.5 ) + theme_void() + geom_sf_text(data = region_nutr %&gt;% dplyr::filter(!region == &quot;Atauro&quot;), mapping = aes(label = region, geometry = geometry), size = 3, color = &quot;grey50&quot;, fontface = &quot;bold&quot;) + annotate( &quot;text&quot;, x = 126, y = -8.2, label = &quot;Atauro 1,067.9%&quot;, size = 3, color = &quot;firebrick&quot;, fontface = &quot;bold&quot; ) + # annotate( # &quot;text&quot;, x = 125.8, y = -8.2, label = &quot;1067.9%&quot;, size = 3, color = &quot;firebrick&quot;, fontface = &quot;bold&quot; # ) + scale_fill_distiller(palette = &quot;YlGnBu&quot;, direction = 1) + guides(alpha = &quot;none&quot;) + coord_sf(expand = FALSE) + theme( plot.margin = margin(0, 0, 0, 0, &quot;cm&quot;), legend.position = &quot;bottom&quot;, legend.key.width = unit(1, &quot;cm&quot;), panel.grid = element_blank(), axis.ticks = element_blank(), axis.title = element_blank(), axis.text = element_blank() ) + labs( fill = &quot;WRA (%)&quot; ) #title = &quot;WRA that would meet the recommended quantity of edible fish annually,\\nfrom marine catches by municipality&quot; #title = &quot;Timor-Leste small scale fisheries production&quot;, #subtitle = &quot;Annual catch in Mt per municipality, average (2020-2022)&quot; cowplot::plot_grid( p1 + theme(plot.margin = margin(0, 0, 0, 0, &quot;cm&quot;)), p2 + theme(plot.margin = margin(0, 0, 0, 0, &quot;cm&quot;)), ncol = 2, labels = &quot;AUTO&quot;, rel_widths = c(1, 1), align = &quot;hv&quot; ) "],["distribution.html", "3 Nutritional contribution and economic profiling", " 3 Nutritional contribution and economic profiling Code library(ggplot2) catch_groups_name &lt;- timor.nutrients::catch_groups %&gt;% dplyr::select( grouped_taxa = interagency_code, catch_name ) tot_catch &lt;- timor.nutrients::region_stats %&gt;% dplyr::mutate(year = lubridate::year(date_bin_start)) %&gt;% dplyr::group_by(grouped_taxa, year) %&gt;% dplyr::summarise(catch = sum(catch)) %&gt;% dplyr::group_by(grouped_taxa) %&gt;% dplyr::summarise(catch = mean(catch)) %&gt;% dplyr::left_join(catch_groups_name) %&gt;% dplyr::select(-grouped_taxa) %&gt;% dplyr::select(catch_name, catch) %&gt;% dplyr::mutate(catch = catch / 1000) base_plot &lt;- timor.nutrients::nutrients_table %&gt;% dplyr::left_join(catch_groups_name) %&gt;% dplyr::select(catch_name, grouped_taxa, Selenium_mu:Vitamin_A_mu) %&gt;% rename_nutrients_mu(hyphen = FALSE) %&gt;% tidyr::pivot_longer(-c(catch_name, grouped_taxa), names_to = &quot;nutrient&quot;, values_to = &quot;concentration&quot;) %&gt;% dplyr::filter(!nutrient == &quot;selenium&quot; &amp; !catch_name %in% &quot;Other&quot;) %&gt;% dplyr::left_join(RDI_tab) %&gt;% dplyr::mutate( nutrient = stringr::str_to_title(nutrient), nutrient = dplyr::case_when( nutrient == &quot;Omega3&quot; ~ &quot;Omega-3&quot;, nutrient == &quot;Vitamina&quot; ~ &quot;Vitamin-A&quot;, TRUE ~ nutrient ) ) %&gt;% dplyr::mutate(rdi = (concentration * 100) / conv_factor) %&gt;% dplyr::group_by(catch_name) %&gt;% dplyr::mutate(tot = sum(rdi, na.rm = T)) %&gt;% dplyr::arrange(-tot) %&gt;% dplyr::left_join(tot_catch) %&gt;% tidyr::replace_na(list(catch = 0)) %&gt;% dplyr::arrange(dplyr::desc(nutrient)) %&gt;% dplyr::ungroup() %&gt;% dplyr::mutate( fish_group = dplyr::case_when( grouped_taxa %in% c(&quot;COZ&quot;, &quot;CUX&quot;) ~ &quot;Molluscs&quot;, grouped_taxa %in% c(&quot;PEZ&quot;) ~ &quot;Shrimps&quot;, grouped_taxa %in% c(&quot;MZZ&quot;) ~ &quot;Other&quot;, grouped_taxa %in% c(&quot;SLV&quot;, &quot;CRA&quot;) ~ &quot;Crustaceans&quot;, grouped_taxa %in% c(&quot;OCZ&quot;, &quot;IAX&quot;) ~ &quot;Cephalopods&quot;, grouped_taxa %in% c(&quot;SKH&quot;, &quot;SRX&quot;) ~ &quot;Sharks and rays&quot;, grouped_taxa %in% c(&quot;SNA&quot;, &quot;GPX&quot;, &quot;PWT&quot;, &quot;GRX&quot;, &quot;MUI&quot;, &quot;BGX&quot;) ~ &quot;Large demersals&quot;, grouped_taxa %in% c(&quot;CGX&quot;, &quot;TUN&quot;, &quot;BEN&quot;, &quot;LWX&quot;, &quot;BAR&quot;, &quot;SFA&quot;, &quot;CBA&quot;, &quot;DOX&quot;, &quot;ECN&quot;, &quot;DOS&quot;) ~ &quot;Large pelagics&quot;, grouped_taxa %in% c(&quot;YDX&quot;, &quot;SPI&quot;, &quot;EMP&quot;, &quot;SUR&quot;, &quot;TRI&quot;, &quot;MOJ&quot;, &quot;WRA&quot;, &quot;BWH&quot;, &quot;LGE&quot;, &quot;MOB&quot;, &quot;MHL&quot;, &quot;GOX&quot;, &quot;THO&quot;, &quot;IHX&quot;, &quot;APO&quot;, &quot;IHX&quot;, &quot;PUX&quot;, &quot;DRZ&quot;, &quot;DSF&quot;) ~ &quot;Small demersals&quot;, grouped_taxa %in% c(&quot;RAX&quot;, &quot;SDX&quot;, &quot;CJX&quot;, &quot;CLP&quot;, &quot;GZP&quot;, &quot;FLY&quot;, &quot;KYX&quot;, &quot;MOO&quot;, &quot;CLP&quot;, &quot;MUL&quot;, &quot;MIL&quot;, &quot;THF&quot;) ~ &quot;Small pelagics&quot;, TRUE ~ NA_character_ ), fish_group = ifelse(fish_group %in% c(&quot;Shrimps&quot;, &quot;Molluscs&quot;, &quot;Cephalopods&quot;, &quot;Crustaceans&quot;), &quot;Marine invertebrates&quot;, fish_group), ) tot_catch_plot &lt;- base_plot %&gt;% dplyr::group_by(catch_name) %&gt;% # Added .drop false to ensure that all factor levels remain in plot dplyr::summarise( catch_t = dplyr::first(catch), tot_t = dplyr::first(tot) ) # base_plot %&gt;% View() base_plot &lt;- dplyr::left_join(base_plot, tot_catch_plot, by = &quot;catch_name&quot;) %&gt;% dplyr::filter(catch_t &gt; 0) %&gt;% dplyr::mutate( VarColor = dplyr::case_when( fish_group == &quot;Small pelagics&quot; ~ &quot;#bc4749&quot;, fish_group == &quot;Small demersals&quot; ~ &quot;#e9c46a&quot;, fish_group == &quot;Large pelagics&quot; ~ &quot;#2a9d8f&quot;, fish_group == &quot;Large demersals&quot; ~ &quot;#007ea7&quot;, fish_group == &quot;Sharks and rays&quot; ~ &quot;#264653&quot;, fish_group == &quot;Marine invertebrates&quot; ~ &quot;#898989&quot;, TRUE ~ &quot;#000000&quot; ), ColoredVar = glue::glue(&quot;&lt;span style=&#39;color:{VarColor}&#39;&gt;{catch_name}&lt;/span&gt;&quot;), fish_group = factor(fish_group, levels = c( &quot;Small pelagics&quot;, &quot;Large pelagics&quot;, &quot;Small demersals&quot;, &quot;Large demersals&quot;, &quot;Sharks and rays&quot;, &quot;Marine invertebrates&quot; )) ) tons_label &lt;- cowplot::draw_label(&quot;Mean annual\\ncatch (tons)&quot;, x = 0.941, y = 0.98, size = 9) long_plot &lt;- ggplot2::ggplot() + ggpubr::theme_pubr() + ggchicklet::geom_chicklet(base_plot, mapping = ggplot2::aes( y = rdi, x = reorder(ColoredVar, tot), fill = nutrient, color = nutrient ), position = ggplot2::position_stack(reverse = FALSE), alpha = 0.8, width = 1 ) + geom_text(base_plot, mapping = aes(y = rdi, x = reorder(ColoredVar, tot), label = round(rdi, 2) * 100), position = position_stack(0.5), color = &quot;white&quot;, size = 3 ) + geom_text( data = base_plot, mapping = aes( # Set y to a fixed position above the bars y = 1.35, # Adjust this value if needed x = reorder(ColoredVar, tot_t), label = ifelse(catch_t &lt; 1, &quot;&lt;1&quot;, scales::comma(round(catch_t, 0))), alpha = sqrt(catch_t), ), size = 3, hjust = 0, # Left-align the text nudge_y = 0.05 ) + facet_grid(fish_group ~ ., scales = &quot;free&quot;, space = &quot;free&quot;) + coord_flip(expand = FALSE, ylim = c(0, 1.5)) + ggplot2::scale_fill_manual(values = timor.nutrients::palettes$nutrients_palette) + ggplot2::scale_color_manual(values = timor.nutrients::palettes$nutrients_palette) + ggplot2::scale_y_continuous(labels = scales::percent, n.breaks = 10) + ggplot2::labs(x = &quot;&quot;, y = &quot;&quot;, fill = &quot;Nutrient&quot;, subtitle = &quot;Groups nutrient density&quot;) + ggplot2::theme( legend.position = &quot;bottom&quot;, panel.grid.major.y = element_line(linetype = &quot;dashed&quot;), strip.background = ggplot2::element_blank(), strip.text = ggplot2::element_blank(), axis.text.y = ggtext::element_markdown(size = 9), panel.spacing = unit(0.1, &quot;lines&quot;), plot.subtitle = element_text(face = &quot;bold&quot;) ) + guides( alpha = &quot;none&quot;, color = &quot;none&quot; ) long_legend &lt;- ggpubr::get_legend(long_plot) long_plot &lt;- long_plot + theme(legend.position = &quot;none&quot;) long_plot &lt;- cowplot::plot_grid(long_plot) + tons_label # groups_palette &lt;- c(&quot;#2a9d8f&quot;, &quot;#264653&quot;, &quot;#007ea7&quot;, &quot;#e9c46a&quot;, &quot;#898989&quot;, &quot;#bc4749&quot;) groups_palette &lt;- c(&quot;#bc4749&quot;, &quot;#2a9d8f&quot;, &quot;#e9c46a&quot;, &quot;#007ea7&quot;, &quot;#264653&quot;, &quot;#898989&quot;) groups_plot &lt;- timor.nutrients::region_stats %&gt;% dplyr::mutate(fish_group = dplyr::case_when( grouped_taxa %in% c(&quot;COZ&quot;) ~ &quot;Molluscs&quot;, grouped_taxa %in% c(&quot;PEZ&quot;) ~ &quot;Shrimps&quot;, grouped_taxa %in% c(&quot;MZZ&quot;) ~ &quot;Other&quot;, grouped_taxa %in% c(&quot;SLV&quot;, &quot;CRA&quot;) ~ &quot;Crustaceans&quot;, grouped_taxa %in% c(&quot;OCZ&quot;, &quot;IAX&quot;) ~ &quot;Cephalopods&quot;, grouped_taxa %in% c(&quot;SKH&quot;, &quot;SRX&quot;) ~ &quot;Sharks and rays&quot;, grouped_taxa %in% c(&quot;SNA&quot;, &quot;GPX&quot;, &quot;PWT&quot;, &quot;GRX&quot;, &quot;MUI&quot;, &quot;BGX&quot;) ~ &quot;Large demersals&quot;, grouped_taxa %in% c(&quot;CGX&quot;, &quot;TUN&quot;, &quot;BEN&quot;, &quot;LWX&quot;, &quot;BAR&quot;, &quot;SFA&quot;, &quot;CBA&quot;, &quot;DOX&quot;, &quot;ECN&quot;, &quot;DOS&quot;) ~ &quot;Large pelagics&quot;, grouped_taxa %in% c(&quot;YDX&quot;, &quot;SPI&quot;, &quot;EMP&quot;, &quot;SUR&quot;, &quot;TRI&quot;, &quot;MOJ&quot;, &quot;WRA&quot;, &quot;BWH&quot;, &quot;LGE&quot;, &quot;MOB&quot;, &quot;MHL&quot;, &quot;GOX&quot;, &quot;THO&quot;, &quot;IHX&quot;, &quot;APO&quot;, &quot;IHX&quot;, &quot;PUX&quot;, &quot;DRZ&quot;) ~ &quot;Small demersals&quot;, grouped_taxa %in% c(&quot;RAX&quot;, &quot;SDX&quot;, &quot;CJX&quot;, &quot;CLP&quot;, &quot;GZP&quot;, &quot;FLY&quot;, &quot;KYX&quot;, &quot;MOO&quot;, &quot;CLP&quot;, &quot;MUL&quot;, &quot;DSF&quot;, &quot;MIL&quot;, &quot;THF&quot;) ~ &quot;Small pelagics&quot;, TRUE ~ NA_character_ )) %&gt;% dplyr::select(-grouped_taxa) %&gt;% dplyr::group_by(fish_group) %&gt;% dplyr::summarise(dplyr::across(dplyr::where(is.numeric), ~ sum(.x, na.rm = T))) %&gt;% na.omit() %&gt;% tidyr::pivot_longer(-c(fish_group, catch), names_to = &quot;nutrient&quot;) %&gt;% dplyr::group_by(nutrient, fish_group) %&gt;% dplyr::summarise(value = sum(value)) %&gt;% dplyr::arrange(-value, .by_group = TRUE) %&gt;% dplyr::select(fish_group, nutrient, value) %&gt;% dplyr::ungroup() %&gt;% dplyr::mutate( nutrient = as.factor(nutrient), fish_group = ifelse(fish_group %in% c(&quot;Shrimps&quot;, &quot;Molluscs&quot;, &quot;Cephalopods&quot;, &quot;Crustaceans&quot;), &quot;Marine invertebrates&quot;, fish_group), fish_group = factor(fish_group, levels = c( &quot;Shrimps&quot;, &quot;Molluscs&quot;, &quot;Cephalopods&quot;, &quot;Crustaceans&quot;, &quot;Marine invertebrates&quot;, &quot;Sharks and rays&quot;, &quot;Large demersals&quot;, &quot;Small demersals&quot;, &quot;Large pelagics&quot;, &quot;Small pelagics&quot; )) ) %&gt;% dplyr::filter(!nutrient == &quot;selenium&quot;) %&gt;% dplyr::mutate( nutrient = stringr::str_to_title(nutrient), nutrient = dplyr::case_when( nutrient == &quot;Omega3&quot; ~ &quot;Omega-3&quot;, nutrient == &quot;Vitamina&quot; ~ &quot;Vitamin-A&quot;, TRUE ~ nutrient ), fish_label = dplyr::case_when( fish_group == &quot;Small pelagics&quot; ~ &quot;SP&quot;, fish_group == &quot;Large pelagics&quot; ~ &quot;LP&quot;, fish_group == &quot;Small demersals&quot; ~ &quot;SD&quot;, fish_group == &quot;Large demersals&quot; ~ &quot;LD&quot;, fish_group == &quot;Sharks and rays&quot; ~ &quot;SR&quot;, fish_group == &quot;Marine invertebrates&quot; ~ &quot;MI&quot; ), fish_label = factor(fish_label, levels = rev(c( &quot;SP&quot;, &quot;LP&quot;, &quot;SD&quot;, &quot;LD&quot;, &quot;SR&quot;, &quot;MI&quot; ))) ) %&gt;% ggplot(aes(fish_label, value / 1000, fill = fish_label)) + ggpubr::theme_pubr() + ggchicklet::geom_chicklet( alpha = 0.8, radius = grid::unit(5, &quot;pt&quot;) ) + facet_wrap(. ~ nutrient, scales = &quot;free&quot;, ncol = 2) + labs(y = &quot;Tons (2018-2023)&quot;, x = &quot;Functional\\ngroup&quot;, fill = &quot;Fish group&quot;, subtitle = &quot;Nutrient yield&quot;) + theme( legend.position = &quot;&quot;, panel.grid = element_blank(), strip.background = ggplot2::element_blank(), # This removes the background from the facet titles axis.text.y = element_text(size = 7), axis.ticks.y = ggplot2::element_blank(), panel.spacing.x = unit(0.1, &quot;lines&quot;), panel.spacing.y = unit(0, &quot;lines&quot;), plot.subtitle = element_text(face = &quot;bold&quot;) ) + scale_fill_manual( values = groups_palette, breaks = c( &quot;SP&quot;, &quot;LP&quot;, &quot;SD&quot;, &quot;LD&quot;, &quot;SR&quot;, &quot;MI&quot; ) ) + scale_y_continuous(n.breaks = 3) + coord_flip(expand = F) ### groups_palette &lt;- c(&quot;#bc4749&quot;, &quot;#2a9d8f&quot;, &quot;#e9c46a&quot;, &quot;#007ea7&quot;, &quot;#264653&quot;, &quot;#898989&quot;) top_groups &lt;- timor.nutrients::region_stats %&gt;% dplyr::select(grouped_taxa, catch) %&gt;% dplyr::mutate( tot_catch = sum(catch, na.rm = T), fish_group = dplyr::case_when( grouped_taxa %in% c(&quot;COZ&quot;) ~ &quot;Molluscs&quot;, grouped_taxa %in% c(&quot;PEZ&quot;) ~ &quot;Shrimps&quot;, grouped_taxa %in% c(&quot;MZZ&quot;) ~ &quot;Other&quot;, grouped_taxa %in% c(&quot;SLV&quot;, &quot;CRA&quot;) ~ &quot;Crustaceans&quot;, grouped_taxa %in% c(&quot;OCZ&quot;, &quot;IAX&quot;) ~ &quot;Cephalopods&quot;, grouped_taxa %in% c(&quot;SKH&quot;, &quot;SRX&quot;) ~ &quot;Sharks and rays&quot;, grouped_taxa %in% c(&quot;SNA&quot;, &quot;GPX&quot;, &quot;PWT&quot;, &quot;GRX&quot;, &quot;MUI&quot;, &quot;BGX&quot;) ~ &quot;Large demersals&quot;, grouped_taxa %in% c(&quot;CGX&quot;, &quot;TUN&quot;, &quot;BEN&quot;, &quot;LWX&quot;, &quot;BAR&quot;, &quot;SFA&quot;, &quot;CBA&quot;, &quot;DOX&quot;, &quot;ECN&quot;, &quot;DOS&quot;) ~ &quot;Large pelagics&quot;, grouped_taxa %in% c(&quot;YDX&quot;, &quot;SPI&quot;, &quot;EMP&quot;, &quot;SUR&quot;, &quot;TRI&quot;, &quot;MOJ&quot;, &quot;WRA&quot;, &quot;BWH&quot;, &quot;LGE&quot;, &quot;MOB&quot;, &quot;MHL&quot;, &quot;GOX&quot;, &quot;THO&quot;, &quot;IHX&quot;, &quot;APO&quot;, &quot;IHX&quot;, &quot;PUX&quot;, &quot;DRZ&quot;) ~ &quot;Small demersals&quot;, grouped_taxa %in% c(&quot;RAX&quot;, &quot;SDX&quot;, &quot;CJX&quot;, &quot;CLP&quot;, &quot;GZP&quot;, &quot;FLY&quot;, &quot;KYX&quot;, &quot;MOO&quot;, &quot;CLP&quot;, &quot;MUL&quot;, &quot;DSF&quot;, &quot;MIL&quot;, &quot;THF&quot;) ~ &quot;Small pelagics&quot;, TRUE ~ NA_character_ ) ) %&gt;% dplyr::mutate(fish_group = ifelse(fish_group %in% c(&quot;Shrimps&quot;, &quot;Molluscs&quot;, &quot;Cephalopods&quot;, &quot;Crustaceans&quot;), &quot;Marine invertebrates&quot;, fish_group)) %&gt;% dplyr::group_by(fish_group, grouped_taxa) %&gt;% dplyr::summarise( tot_catch = dplyr::first(tot_catch), catch = sum(catch, na.rm = T), catch_percent = catch / tot_catch * 100 ) %&gt;% dplyr::group_by(fish_group) %&gt;% dplyr::slice_max(catch_percent, n = 1) %&gt;% dplyr::arrange(-catch_percent, .by_group = T) %&gt;% na.omit() %&gt;% dplyr::rename(interagency_code = &quot;grouped_taxa&quot;) %&gt;% dplyr::left_join(timor.nutrients::catch_groups, by = &quot;interagency_code&quot;) %&gt;% dplyr::select(fish_group, catch_name, interagency_code, catch_percent) %&gt;% dplyr::ungroup() revenue_dat &lt;- timor.nutrients::catch_data %&gt;% tidyr::unnest(landing_catch) %&gt;% tidyr::unnest(length_frequency) %&gt;% dplyr::filter(!is.na(.data$weight), !is.na(landing_value)) %&gt;% dplyr::group_by(landing_id) %&gt;% dplyr::mutate(n = dplyr::n()) %&gt;% dplyr::filter(n == 1) %&gt;% dplyr::select(-n) %&gt;% dplyr::ungroup() %&gt;% dplyr::mutate(tot_obs = length(unique(landing_id))) %&gt;% dplyr::group_by(catch_taxon) %&gt;% dplyr::filter(catch_taxon %in% top_groups$interagency_code) %&gt;% dplyr::group_by(.data$landing_id, .data$catch_taxon) %&gt;% dplyr::summarise( landing_value = dplyr::first(landing_value), dplyr::across( c(.data$weight:.data$Vitamin_A_mu), ~ sum(.x) ) ) models &lt;- revenue_dat %&gt;% dplyr::ungroup() %&gt;% dplyr::select(catch_taxon, landing_value, weight) %&gt;% # dplyr::group_by(catch_taxon) %&gt;% # dplyr::mutate(model = broom::augment(stats::lm(formula = log(landing_value + 1) ~ log(weight / 1000 + 1)))) %&gt;% # dplyr::ungroup() %&gt;% # dplyr::mutate(cooksd = .data$model$`.cooksd`) %&gt;% # dplyr::select(-.data$model) %&gt;% # dplyr::mutate(out = dplyr::case_when(.data$cooksd &gt; (5 * mean(.data$cooksd)) ~ 1, TRUE ~ 0)) %&gt;% # dplyr::filter(out == 0) %&gt;% # dplyr::select(-out, -cooksd) %&gt;% dplyr::select(catch_taxon, landing_value, weight) %&gt;% split(.$catch_taxon) %&gt;% purrr::map(~ lm(log(landing_value) ~ log(weight), data = .x)) %&gt;% purrr::map(~ predict(.x, data.frame(weight = log(1000)))) %&gt;% dplyr::bind_rows(.id = &quot;catch_taxon&quot;) %&gt;% dplyr::rename(price = `1`) %&gt;% dplyr::mutate(price = round(exp(price) * 10, 2)) revenue_dat &lt;- revenue_dat %&gt;% rename_nutrients_mu() %&gt;% tidyr::pivot_longer(-c(landing_id:weight), names_to = &quot;nutrient&quot;) %&gt;% dplyr::filter(!nutrient == &quot;selenium&quot;) %&gt;% dplyr::left_join(RDI_tab) %&gt;% dplyr::ungroup() %&gt;% dplyr::mutate( value = value / weight * 100, inds = value / conv_factor * 100 ) %&gt;% dplyr::group_by(landing_id, catch_taxon) %&gt;% dplyr::mutate(inds_100 = sum(inds)) %&gt;% dplyr::group_by(catch_taxon) %&gt;% dplyr::summarise( inds = dplyr::first(inds_100) ) %&gt;% dplyr::left_join(models) %&gt;% dplyr::rename(interagency_code = catch_taxon) %&gt;% dplyr::left_join(timor.nutrients::catch_groups, by = &quot;interagency_code&quot;) %&gt;% dplyr::left_join(top_groups, by = &quot;catch_name&quot;) %&gt;% dplyr::select(fish_group, catch_name, price, inds, catch_percent) revenue_plot &lt;- revenue_dat %&gt;% dplyr::mutate(fish_group = factor(fish_group, levels = c( &quot;Small pelagics&quot;, &quot;Large pelagics&quot;, &quot;Small demersals&quot;, &quot;Large demersals&quot;, &quot;Sharks and rays&quot;, &quot;Marine invertebrates&quot; ))) %&gt;% # dplyr::filter(!catch_name %in% c(&quot;Stingrays&quot;)) %&gt;% ggplot(aes(inds, price, size = catch_percent, color = fish_group)) + ggpubr::theme_pubr() + geom_point(stroke = 2, alpha = 0.5) + geom_point(size = 1) + geom_text(aes(label = catch_name, color = fish_group), size = 3.5, vjust = -2.2, show.legend = FALSE) + scale_size(range = c(1, 15)) + coord_cartesian( ylim = c(0, 12), xlim = c(65, 145) ) + scale_x_continuous(labels = scales::label_percent(scale = 1), n.breaks = 5) + scale_y_continuous(labels = scales::label_dollar(), n.breaks = 8) + scale_color_manual(values = groups_palette) + theme( panel.grid = element_blank(), legend.position = &quot;bottom&quot;, plot.subtitle = element_text(face = &quot;bold&quot;) ) + guides( size = &quot;none&quot;, colour = guide_legend(override.aes = list(size = 5)) ) + labs( x = &quot;&quot;, y = &quot;Price (USD / kg)&quot;, subtitle = &quot;Affordability and nutrient density&quot;, color = &quot;Functional\\ngroup&quot; ) groups_leg &lt;- ggpubr::get_legend(revenue_plot) revenue_plot &lt;- revenue_plot + theme(legend.position = &quot;none&quot;) habitat_nutrients &lt;- timor.nutrients::kobo_trips %&gt;% dplyr::select(habitat, weight:Vitamin_A_mu) %&gt;% rename_nutrients_mu() %&gt;% tidyr::pivot_longer(-c(habitat, weight), names_to = &quot;nutrient&quot;) %&gt;% dplyr::left_join(RDI_tab) %&gt;% dplyr::mutate( value = value / weight, inds_kg = (value * 1000) / conv_factor ) %&gt;% dplyr::group_by(habitat, nutrient) %&gt;% dplyr::summarise(inds_kg = median(inds_kg, na.rm = T) / 10) %&gt;% dplyr::mutate(inds_kg = inds_kg * 100) %&gt;% dplyr::filter(!nutrient == &quot;selenium&quot;) %&gt;% dplyr::mutate( habitat = ifelse(habitat == &quot;Deep&quot;, &quot;Pelagic&quot;, habitat), nutrient = stringr::str_to_title(nutrient), nutrient = dplyr::case_when( nutrient == &quot;Omega3&quot; ~ &quot;Omega-3&quot;, nutrient == &quot;Vitamina&quot; ~ &quot;Vitamin-A&quot;, TRUE ~ nutrient ) ) habitat_plot &lt;- ggplot2::ggplot() + ggpubr::theme_pubr() + ggchicklet::geom_chicklet(habitat_nutrients, mapping = ggplot2::aes( y = inds_kg, x = reorder(habitat, inds_kg), fill = nutrient, color = nutrient ), position = ggplot2::position_stack(reverse = FALSE), alpha = 0.8, width = 0.8, radius = grid::unit(3, &quot;pt&quot;) ) + ggplot2::geom_text(habitat_nutrients, mapping = ggplot2::aes( y = inds_kg, x = reorder(habitat, inds_kg), label = round(inds_kg, 0), group = nutrient ), position = ggplot2::position_stack(0.5, reverse = FALSE), color = &quot;white&quot;, size = 2.5 ) + ggplot2::scale_fill_manual(values = timor.nutrients::palettes$nutrients_palette) + ggplot2::scale_color_manual(values = timor.nutrients::palettes$nutrients_palette) + ggplot2::scale_y_continuous(labels = scales::label_percent(scale = 1)) + ggplot2::coord_flip(expand = FALSE) + ggplot2::theme( legend.position = &quot;&quot;, panel.grid = ggplot2::element_blank(), axis.text.y = element_text(size = 7.75), plot.subtitle = element_text(face = &quot;bold&quot;) ) + ggplot2::labs(x = &quot;&quot;, fill = &quot;&quot;, y = &quot;Cumulative nutrient density score&quot;, subtitle = &quot;Habitat and nutrient density&quot;) + ggplot2::guides( alpha = &quot;none&quot;, color = &quot;none&quot;, fill = guide_legend(override.aes = list(size = 7)) ) gear_nutrients &lt;- timor.nutrients::kobo_trips %&gt;% dplyr::select(gear_type, weight:Vitamin_A_mu) %&gt;% rename_nutrients_mu() %&gt;% tidyr::pivot_longer(-c(gear_type, weight), names_to = &quot;nutrient&quot;) %&gt;% dplyr::left_join(RDI_tab) %&gt;% dplyr::mutate( value = value / weight, inds_kg = (value * 1000) / conv_factor ) %&gt;% dplyr::group_by(gear_type, nutrient) %&gt;% dplyr::summarise(inds_kg = median(inds_kg, na.rm = T) / 10) %&gt;% dplyr::mutate(inds_kg = inds_kg * 100) %&gt;% dplyr::filter(!nutrient == &quot;selenium&quot;) %&gt;% dplyr::mutate( nutrient = stringr::str_to_title(nutrient), nutrient = dplyr::case_when( nutrient == &quot;Omega3&quot; ~ &quot;Omega-3&quot;, nutrient == &quot;Vitamina&quot; ~ &quot;Vitamin-A&quot;, TRUE ~ nutrient ) ) %&gt;% dplyr::mutate(gear_type = stringr::str_to_title(gear_type)) %&gt;% dplyr::ungroup() gear_nutrients &lt;- ggplot2::ggplot() + ggpubr::theme_pubr() + ggchicklet::geom_chicklet(gear_nutrients, mapping = ggplot2::aes( y = inds_kg, x = reorder(gear_type, inds_kg), fill = nutrient, color = nutrient ), position = ggplot2::position_stack(reverse = FALSE), alpha = 0.8, width = 0.8, radius = grid::unit(3, &quot;pt&quot;) ) + ggplot2::geom_text(gear_nutrients, mapping = ggplot2::aes( y = inds_kg, x = reorder(gear_type, inds_kg), label = round(inds_kg, 0), group = nutrient ), position = ggplot2::position_stack(0.5, reverse = FALSE), color = &quot;white&quot;, size = 2.5 ) + ggplot2::scale_fill_manual(values = timor.nutrients::palettes$nutrients_palette) + ggplot2::scale_color_manual(values = timor.nutrients::palettes$nutrients_palette) + ggplot2::scale_y_continuous(labels = scales::label_percent(scale = 1)) + ggplot2::coord_flip(expand = FALSE) + ggplot2::theme( legend.position = &quot;&quot;, panel.grid = ggplot2::element_blank(), axis.text.y = element_text(size = 7.75), plot.subtitle = element_text(face = &quot;bold&quot;) ) + ggplot2::labs(x = &quot;&quot;, fill = &quot;&quot;, y = &quot;Cumulative nutrient density score&quot;, subtitle = &quot;Gear type and nutrient density&quot;) + ggplot2::guides( alpha = &quot;none&quot;, color = &quot;none&quot;, fill = guide_legend(override.aes = list(size = 7)) ) second_row_plot &lt;- cowplot::plot_grid( groups_plot, #+ theme(plot.margin = unit(c(0, 0, 0, +2.2), &quot;cm&quot;)), revenue_plot, ncol = 1, align = &quot;hv&quot;, labels = c(&quot;B&quot;, &quot;C&quot;), rel_heights = c(1.2, 1) ) p1 &lt;- cowplot::plot_grid( long_plot, second_row_plot, ncol = 2, align = &quot;hv&quot;, rel_widths = c(1.75, 1), labels = &quot;AUTO&quot; ) bottom_row_plot &lt;- cowplot::plot_grid( habitat_plot + labs(y = &quot;&quot;), gear_nutrients + labs(y = &quot;&quot;), ncol = 2, align = &quot;hv&quot;, labels = c(&quot;&quot;, &quot;&quot;), rel_heights = c(1, 1) ) p2 &lt;- cowplot::plot_grid( p1 + theme(plot.margin = unit(c(0, 0, 0, 0), &quot;cm&quot;)), bottom_row_plot + theme(plot.margin = unit(c(-0.5, 0, 0, 0), &quot;cm&quot;)), nrow = 2, labels = c(&quot;A&quot;, &quot;D&quot;), rel_heights = c(1, 0.25), align = &quot;v&quot; # align vertically ) legends &lt;- cowplot::plot_grid( long_legend, groups_leg ) x_label &lt;- cowplot::draw_label(&quot;Cumulative Nutrient Density Score (NDS)&quot;, x = 0.55, y = 0.0825) cowplot::plot_grid( p2, legends + theme(plot.margin = unit(c(0.19, 0, 0, -2), &quot;cm&quot;)), nrow = 2, align = &quot;h&quot;, rel_heights = c(1.3, 0.1) ) + x_label Code parallel_plot &lt;- timor.nutrients::kobo_trips %&gt;% dplyr::mutate(habitat = ifelse(habitat == &quot;Deep&quot;, &quot;Pelagic&quot;, habitat)) %&gt;% dplyr::select(habitat, gear_type, Selenium_mu:Vitamin_A_mu) %&gt;% rename_nutrients_mu() %&gt;% tidyr::pivot_longer(-c(habitat, gear_type), names_to = &quot;nutrient&quot;, values_to = &quot;concentration_g&quot;) %&gt;% dplyr::group_by(habitat, gear_type, nutrient) %&gt;% dplyr::summarise(concentration_g = sum(concentration_g, na.rm = T)) %&gt;% # get relative values dplyr::group_by(nutrient) %&gt;% dplyr::mutate( nutrient_sum = sum(concentration_g), concentration_g = concentration_g / nutrient_sum * 100 ) %&gt;% dplyr::ungroup() %&gt;% dplyr::mutate(dplyr::across(habitat:nutrient, ~ as.factor(.x))) %&gt;% dplyr::mutate( nutrient = as.factor(nutrient) ) %&gt;% dplyr::mutate( nutrient = stringr::str_to_title(nutrient), nutrient = dplyr::case_when( nutrient == &quot;Omega3&quot; ~ &quot;Omega-3&quot;, nutrient == &quot;Vitamina&quot; ~ &quot;Vitamin-A&quot;, TRUE ~ nutrient ) ) %&gt;% dplyr::rename( &quot;Nutrient&quot; = nutrient, &quot;Habitat&quot; = habitat, &quot;Gear type&quot; = gear_type ) %&gt;% ggforce::gather_set_data(c(3, 1, 2)) parallel_plot$x &lt;- factor(parallel_plot$x, levels = c(&quot;3&quot;, &quot;1&quot;, &quot;2&quot;), labels = c(&quot;Nutrient&quot;, &quot;Habitat&quot;, &quot;Gear type&quot;) ) parallel_plot$y &lt;- factor(parallel_plot$y, levels = c( &quot;Protein&quot;, &quot;Omega-3&quot;, &quot;Calcium&quot;, &quot;Iron&quot;, &quot;Vitamin-A&quot;, &quot;Zinc&quot;, &quot;Selenium&quot;, &quot;Reef&quot;, &quot;Pelagic&quot;, &quot;FAD&quot;, &quot;Beach&quot;, &quot;Traditional FAD&quot;, &quot;Mangrove&quot;, &quot;Seagrass&quot;, &quot;gill net&quot;, &quot;seine net&quot;, &quot;spear gun&quot;, &quot;hand line&quot;, &quot;long line&quot;, &quot;manual collection&quot;, &quot;beach seine&quot;, &quot;trap&quot;, &quot;cast net&quot; )) parallel_plot %&gt;% dplyr::filter(!Nutrient == &quot;Selenium&quot;) %&gt;% na.omit() %&gt;% ggplot(aes(x, id = id, split = y, value = concentration_g)) + ggforce::geom_parallel_sets(aes(fill = Nutrient), alpha = 0.7, axis.width = 0.1) + ggforce::geom_parallel_sets_axes(axis.width = 0.25, fill = &quot;grey95&quot;) + ggforce::geom_parallel_sets_labels(colour = &quot;grey30&quot;, angle = 0, size = 3.5) + scale_x_discrete(name = NULL, expand = c(0, 0.2)) + scale_y_continuous(breaks = NULL, expand = c(0.05, 0)) + theme_minimal(12) + scale_fill_manual(values = timor.nutrients::palettes$nutrients_palette) + # scale_fill_manual(values = c(&quot;#508AA8&quot;, &quot;grey95&quot;, &quot;#BD9391&quot;)) + theme( axis.line = element_blank(), axis.ticks = element_blank(), legend.position = &quot;bottom&quot;, panel.grid.major = element_blank(), axis.text = element_text(size = 12, color = &quot;black&quot;) ) + labs(fill = &quot;&quot;) "],["profiles.html", "4 Nutritional profiles", " 4 Nutritional profiles Code library(ggplot2) data &lt;- get_model_data() data$data_raw$timor_GN_raw$clusters &lt;- paste0(&quot;FNP-&quot;, data$data_raw$timor_GN_raw$clusters) data$data_raw$timor_AG_raw$clusters &lt;- paste0(&quot;FNP-&quot;, data$data_raw$timor_AG_raw$clusters) plot_profiles &lt;- function(x) { means_dat &lt;- x %&gt;% dplyr::rename_with(~ stringr::str_to_title(.x), .cols = c(.data$zinc:.data$vitaminA)) %&gt;% dplyr::rename( &quot;Vitamin-A&quot; = .data$Vitamina, &quot;Omega-3&quot; = .data$Omega3 ) %&gt;% tidyr::pivot_longer(c(Zinc:&quot;Vitamin-A&quot;)) %&gt;% dplyr::group_by(clusters, name) %&gt;% dplyr::summarise( mean = mean(value, na.rm = TRUE), sd = sd(value, na.rm = TRUE), n = dplyr::n(), se = sd / sqrt(n), ci_lower = mean - qt(0.99, df = n - 1) * se, ci_upper = mean + qt(0.99, df = n - 1) * se ) all_dat &lt;- x %&gt;% dplyr::rename_with(~ stringr::str_to_title(.x), .cols = c(.data$zinc:.data$vitaminA)) %&gt;% dplyr::rename( &quot;Vitamin-A&quot; = .data$Vitamina, &quot;Omega-3&quot; = .data$Omega3 ) %&gt;% tidyr::pivot_longer(c(Zinc:&quot;Vitamin-A&quot;)) ggplot() + ggpubr::theme_pubr()+ geom_jitter(data = all_dat, mapping = aes(x = value, y = name, color = clusters), alpha = 0.01, size = 1, position = position_dodge(width = 0.5)) + geom_point(data = means_dat, mapping = aes(x = mean, y = name, color = clusters), size = 5, position = position_dodge(width = 0.5)) + labs( x = &quot;&quot;, y = &quot;&quot;, color = &quot;Profiles&quot; ) + ggplot2::theme( legend.position = &quot;&quot;, plot.margin = unit(c(0, 0, 0, 0), &quot;cm&quot;), panel.grid = ggplot2::element_blank() ) + coord_cartesian(xlim = c(0, 5)) + scale_fill_manual(values = timor.nutrients::palettes$clusters_palette) + scale_color_manual(values = timor.nutrients::palettes$clusters_palette) } plots1 &lt;- plot_profiles(data$data_raw$timor_AG_raw) #purrr::map(data$data_raw$timor_AG_raw, plot_profiles) means_dat &lt;- data$data_raw$timor_GN_raw %&gt;% dplyr::rename_with(~ stringr::str_to_title(.x), .cols = c(.data$zinc:.data$vitaminA)) %&gt;% dplyr::rename( &quot;Vitamin-A&quot; = .data$Vitamina, &quot;Omega-3&quot; = .data$Omega3 ) %&gt;% tidyr::pivot_longer(c(Zinc:&quot;Vitamin-A&quot;)) %&gt;% dplyr::group_by(clusters, name) %&gt;% dplyr::summarise( mean = mean(value, na.rm = TRUE), sd = sd(value, na.rm = TRUE), n = dplyr::n(), se = sd / sqrt(n), ci_lower = mean - qt(0.99, df = n - 1) * se, ci_upper = mean + qt(0.99, df = n - 1) * se ) all_dat &lt;- data$data_raw$timor_GN_raw %&gt;% dplyr::rename_with(~ stringr::str_to_title(.x), .cols = c(.data$zinc:.data$vitaminA)) %&gt;% dplyr::rename( &quot;Vitamin-A&quot; = .data$Vitamina, &quot;Omega-3&quot; = .data$Omega3 ) %&gt;% tidyr::pivot_longer(c(Zinc:&quot;Vitamin-A&quot;)) plots2 &lt;- ggplot() + ggpubr::theme_pubr()+ geom_jitter(data = all_dat, mapping = aes(x = value, y = name, color = clusters), alpha = 0.01, size = 1, position = position_dodge(width = 0.5)) + geom_point(data = means_dat, mapping = aes(x = mean, y = name, color = clusters), size = 5, position = position_dodge(width = 0.5)) + labs( x = &quot;&quot;, y = &quot;&quot;, color = &quot;Profiles&quot; ) + ggplot2::theme( legend.position = &quot;&quot;, plot.margin = unit(c(0, 0, 0, 0), &quot;cm&quot;), panel.grid = ggplot2::element_blank() ) + coord_cartesian(xlim = c(0, 5)) + scale_fill_manual(values = timor.nutrients::palettes$clusters_palette) + scale_color_manual(values = timor.nutrients::palettes$clusters_palette) + annotate( &#39;text&#39;, x = 3.5, y = 2.5, label = &#39;On average, FNP-3 provides enough\\ncalcium for 2.2 people per 1kg of catch,\\nwhile FNP-1 and FNP-2 support\\n0.4 and 0.6 people, respectively&#39;, size = 2.75 ) + #annotate( # &#39;rect&#39;, # xmin = 0, # ymin = 0.5, # ymax = 1.5, # xmax = 4.5, #alpha = 0.5, # color = rgb(0, 0, 0, alpha = 0.85), # linewidth = 0.3, #fill = &quot;transparent&quot;, #linetype = 2 #) + annotate( &#39;curve&#39;, x = 3.4, # Play around with the coordinates until you&#39;re satisfied y = 1.8, yend = 1.3, xend = 2.45, col = &#39;black&#39;, curvature = -0.05, linewidth = 0.3, arrow = arrow(length = unit(0.25, &#39;cm&#39;)) ) plots &lt;- list( plots2 + ggplot2::labs(subtitle = &quot;Gill nets&quot;), plots1 + ggplot2::labs(subtitle = &quot;Other gears&quot;) ) legend_plot &lt;- cowplot::get_legend(plots[[1]] + ggplot2::theme( legend.position = &quot;right&quot;, legend.key.size = ggplot2::unit(0.55, &quot;cm&quot;), legend.title = ggplot2::element_text(size = 12) )) combined_plots &lt;- cowplot::plot_grid(plotlist = plots, ncol = 2, labels = &quot;AUTO&quot;) x_label &lt;- cowplot::draw_label(&quot;NDS per 1kg of catch&quot;, x = 0.5, y = 0.05) y_label &lt;- cowplot::draw_label(&quot;Nutrient&quot;, x = 0.04, y = 0.5, angle = 90) final_plot &lt;- cowplot::plot_grid( combined_plots, legend_plot, ncol = 2, rel_widths = c(1, 0.15), scale = 0.9 ) + x_label + y_label final_plot Code kmean_plots &lt;- data$kmeans_plots plots &lt;- list( kmean_plots$kmeans_timor_GN + ggplot2::labs(subtitle = &quot;Gill nets&quot;), kmean_plots$kmeans_timor_AG + ggplot2::labs(subtitle = &quot;Other gears&quot;) ) plots &lt;- lapply(plots, function(x) { x + ggpubr::theme_pubr()+ ggplot2::theme( legend.position = &quot;none&quot;, plot.margin = unit(c(0, 0, 0, 0), &quot;cm&quot;), panel.grid = ggplot2::element_blank() ) + ggplot2::labs( fill = &quot;Profiles&quot;, color = &quot;Profiles&quot; )+ ggplot2::scale_color_manual( values = timor.nutrients::palettes$clusters_palette, labels = function(x) paste0(&quot;FNP-&quot;, x) ) + ggplot2::scale_fill_manual( values = timor.nutrients::palettes$clusters_palette, labels = function(x) paste0(&quot;FNP-&quot;, x) ) }) legend_plot &lt;- cowplot::get_legend(plots[[1]] + ggplot2::theme( legend.position = &quot;right&quot;, legend.key.size = ggplot2::unit(0.6, &quot;cm&quot;), legend.title = ggplot2::element_text(size = 12) )) combined_plots &lt;- cowplot::plot_grid(plotlist = plots, ncol = 2, labels = &quot;AUTO&quot;) # x_label &lt;- cowplot::draw_label(&quot;False positive rate\\n(1 - Specificity)&quot;, x = 0.5, y = 0.05) # y_label &lt;- cowplot::draw_label(&quot;True positive rate\\n(Sensitivity)&quot;, x = 0.02, y = 0.5, angle = 90) final_plot &lt;- cowplot::plot_grid( combined_plots, legend_plot, ncol = 2, rel_widths = c(1, 0.1), scale = 0.9 ) final_plot Code timor.nutrients::perm_results %&gt;% dplyr::bind_rows(.id = &quot;subset&quot;) %&gt;% dplyr::mutate(dplyr::across(c(SumOfSqs, R2, statistic), ~ round(.x, 2)), p.value = ifelse(p.value &lt;= 0.001, &quot;&lt; 0.001&quot;, p.value), subset = stringr::str_remove(subset, &quot;_perm&quot;), subset = stringr::str_replace(subset, &quot;timor&quot;, &quot;mainland&quot;) ) %&gt;% reactable::reactable( theme = reactablefmtr::fivethirtyeight(centered = TRUE), groupBy = &quot;subset&quot;, defaultExpanded = TRUE, pagination = FALSE, compact = FALSE, borderless = FALSE, striped = FALSE, defaultColDef = reactable::colDef( align = &quot;center&quot; ), columns = list( subset = reactable::colDef( minWidth = 120 ) ) ) Code models_auc &lt;- timor.nutrients::model_outputs %&gt;% purrr::map(purrr::pluck(8)) %&gt;% dplyr::bind_rows(.id = &quot;subset&quot;) %&gt;% dplyr::select(-estimator) %&gt;% tidyr::pivot_wider(names_from = subset, values_from = estimate) plots &lt;- list( timor.nutrients::model_outputs$model_timor_GN$roc_curves + ggplot2::labs(subtitle = paste0(&quot;Gill nets&quot;, &quot; (&quot;, models_auc$model_timor_GN, &quot;)&quot;)), timor.nutrients::model_outputs$model_timor_AG$roc_curves + ggplot2::labs(subtitle = paste0(&quot;Other gears&quot;, &quot; (&quot;, models_auc$model_timor_AG, &quot;)&quot;)) ) plots &lt;- lapply(plots, function(x) { x + ggpubr::theme_pubr()+ ggplot2::theme( panel.grid = ggplot2::element_blank(), legend.position = &quot;none&quot;, plot.margin = unit(c(0, 0, 0, -0.1), &quot;cm&quot;) ) + ggplot2::coord_cartesian(expand = T) + ggplot2::labs(x = &quot;&quot;, y = &quot;&quot;, color = &quot;Profiles&quot;)+ ggplot2::scale_color_manual( values = timor.nutrients::palettes$clusters_palette,, labels = function(x) paste0(&quot;FNP-&quot;, x) ) + ggplot2::scale_fill_manual( values = timor.nutrients::palettes$clusters_palette,, labels = function(x) paste0(&quot;FNP-&quot;, x) ) }) legend_plot &lt;- cowplot::get_legend(plots[[1]] + ggplot2::theme( legend.position = &quot;right&quot;, legend.key.size = ggplot2::unit(0.8, &quot;cm&quot;), legend.title = ggplot2::element_text(size = 12) )) combined_plots &lt;- cowplot::plot_grid(plotlist = plots, ncol = 2, labels = &quot;AUTO&quot;, vjust = 0.2) x_label &lt;- cowplot::draw_label(&quot;False positive rate (1 - Specificity)&quot;, x = 0.5, y = 0.05) y_label &lt;- cowplot::draw_label(&quot;True positive rate (Sensitivity)&quot;, x = 0.02, y = 0.5, angle = 90) final_plot &lt;- cowplot::plot_grid( combined_plots, legend_plot, ncol = 2, rel_widths = c(1, 0.15), scale = 0.9 ) + x_label + y_label final_plot Code models_metrics &lt;- timor.nutrients::model_outputs %&gt;% purrr::map(purrr::pluck(4)) %&gt;% purrr::imap(~ summary(.x)) %&gt;% dplyr::bind_rows(.id = &quot;subset&quot;) %&gt;% dplyr::select(-.estimator) %&gt;% tidyr::pivot_wider(names_from = subset, values_from = .estimate) %&gt;% dplyr::rename(metric = .metric) %&gt;% na.omit() dplyr::bind_rows(models_auc, models_metrics) %&gt;% dplyr::rename( &quot;Other gears&quot; = model_timor_AG, &quot;Gill nets&quot; = model_timor_GN ) %&gt;% dplyr::mutate(dplyr::across(.cols = dplyr::where(is.numeric), ~ round(.x, 2))) %&gt;% reactable::reactable( theme = reactablefmtr::fivethirtyeight(centered = TRUE), defaultExpanded = TRUE, pagination = FALSE, compact = FALSE, borderless = FALSE, striped = FALSE, defaultColDef = reactable::colDef( align = &quot;center&quot; ), columns = list( metric = reactable::colDef( minWidth = 120 ) ) ) Code importance_ag &lt;- model_outputs$model_timor_AG$fit %&gt;% workflows::extract_fit_parsnip() %&gt;% vip::vi() %&gt;% dplyr::mutate( category = dplyr::case_when( stringr::str_detect(Variable, &quot;gear_type&quot;) ~ &quot;gear_type&quot;, stringr::str_detect(Variable, &quot;habitat_gear&quot;) ~ &quot;habitat_gear&quot;, stringr::str_detect(Variable, &quot;habitat&quot;) ~ &quot;habitat&quot;, stringr::str_detect(Variable, &quot;quarter&quot;) ~ &quot;quarter&quot;, stringr::str_detect(Variable, &quot;vessel_type&quot;) ~ &quot;vessel_type&quot;, TRUE ~ &quot;other&quot; ) ) %&gt;% dplyr::group_by(category) %&gt;% dplyr::summarize(Aggregated_Importance = sum(Importance)) %&gt;% dplyr::arrange(dplyr::desc(Aggregated_Importance)) importance_gn &lt;- model_outputs$model_timor_GN$fit %&gt;% workflows::extract_fit_parsnip() %&gt;% vip::vi() %&gt;% dplyr::mutate( category = dplyr::case_when( stringr::str_detect(Variable, &quot;mesh_size&quot;) ~ &quot;mesh_size&quot;, stringr::str_detect(Variable, &quot;habitat_mesh&quot;) ~ &quot;habitat_mesh&quot;, stringr::str_detect(Variable, &quot;habitat&quot;) ~ &quot;habitat&quot;, stringr::str_detect(Variable, &quot;quarter&quot;) ~ &quot;quarter&quot;, stringr::str_detect(Variable, &quot;vessel_type&quot;) ~ &quot;vessel_type&quot;, TRUE ~ &quot;other&quot; ) ) %&gt;% dplyr::group_by(category) %&gt;% dplyr::summarize(Aggregated_Importance = sum(Importance)) %&gt;% dplyr::arrange(dplyr::desc(Aggregated_Importance)) importance_plot &lt;- dplyr::bind_rows( importance_ag %&gt;% dplyr::mutate(model = &quot;Other gears&quot;), importance_gn %&gt;% dplyr::mutate(model = &quot;Gill nets&quot;) ) %&gt;% dplyr::mutate(category = dplyr::case_when(category == &quot;habitat_gear&quot; ~ &quot;habitat x gear type&quot;, category == &quot;habitat_mesh&quot; ~ &quot;habitat x mesh size&quot;, TRUE ~ category), category = stringr::str_replace(category, &quot;_&quot;, &quot; &quot;), category = stringr::str_to_title(category) ) %&gt;% ggplot(aes(x = reorder(category, Aggregated_Importance), y = Aggregated_Importance)) + ggpubr::theme_pubr(border = TRUE) + facet_wrap(~model, scales = &quot;free&quot;) + geom_col(width = 0.2, fill = &quot;#1c8097&quot;, alpha = 0.75) + coord_flip() + labs( x = &quot;Predictor&quot;, y = &quot;Aggregated Feature Importance\\n(XGBoost Gain)&quot; ) + theme( panel.grid.major.y = element_line(linetype = &quot;dashed&quot;), strip.background = ggplot2::element_blank(), strip.text = element_text(size = 12), axis.text.y = ggtext::element_markdown(size = 9), panel.spacing = unit(0.1, &quot;lines&quot;), ) cowplot::ggdraw(importance_plot) + cowplot::draw_plot_label( label = c(&quot;A&quot;, &quot;B&quot;), x = c(0.02, 0.52), # Adjust the x position of labels y = c(0.98, 0.98), # Adjust the y position of labels size = 15 ) Code sha_Mgn &lt;- shapviz::shapviz(timor.nutrients::shap_results$model_timor_GN) annotation_data &lt;- data.frame( profile = &quot;FNP-3&quot;, x = 0.175, y = 120, label = &#39;FNP-3 profile likelihood increases\\nwith &lt;40mm mesh in pelagic and\\nmangrove areas, and 50.8mm mesh\\nin reef and FAD zones&#39; ) p2 &lt;- sha_Mgn %&gt;% purrr::map(get_shaps, model_type = &quot;gn&quot;) %&gt;% dplyr::bind_rows(.id = &quot;profile&quot;) %&gt;% dplyr::mutate(profile = stringr::str_replace(profile, &quot;.pred_&quot;, &quot;FNP-&quot;)) %&gt;% dplyr::group_by(profile, habitat_fact, mesh_fact) %&gt;% dplyr::summarise(mesh_shap = median(mesh_shap, na.rm = TRUE)) %&gt;% dplyr::ungroup() %&gt;% dplyr::filter(mesh_shap &gt; 0) %&gt;% dplyr::mutate(habitat_fact = dplyr::case_when(habitat_fact == &quot;Deep&quot; ~ &quot;Pelagic&quot;, TRUE ~ habitat_fact)) %&gt;% ggplot2::ggplot(ggplot2::aes(mesh_shap, mesh_fact, color = habitat_fact)) + facet_grid(. ~ factor(profile, levels = c(&quot;FNP-3&quot;, &quot;FNP-1&quot;, &quot;FNP-2&quot;)), scales = &quot;free&quot;) + ggplot2::geom_point(ggplot2::aes(alpha = sqrt(mesh_shap), size = mesh_shap)) + ggpubr::theme_pubr(border = TRUE) + ggplot2::scale_color_manual(values = c(&quot;#f28f3b&quot;, &quot;#c27ba0&quot;, &quot;#ffd5c2&quot;, &quot;#588b8b&quot;, &quot;#c8553d&quot;, &quot;#2d3047&quot;, &quot;#007ea7&quot;)) + ggplot2::coord_cartesian(expand = TRUE) + ggplot2::scale_y_reverse(n.breaks = 10) + ggplot2::labs(color = &quot;Habitat&quot;) + ggplot2::theme( panel.grid = ggplot2::element_blank(), strip.background = ggplot2::element_blank(), strip.text.x = ggplot2::element_text(face = &quot;bold&quot;) ) + ggplot2::guides( color = ggplot2::guide_legend(override.aes = list(size = 3)), alpha = &quot;none&quot;, size = &quot;none&quot; ) + ggplot2::geom_text( data = annotation_data, aes(x = x, y = y, label = label), size = 3, fontface = &quot;plain&quot;, inherit.aes = FALSE ) + ggplot2::geom_rect( data = annotation_data, aes(xmin = 0.27, xmax = 0.36, ymin = 19, ymax = 57), fill = &quot;white&quot;, alpha = 0.2, color = &quot;black&quot;, inherit.aes = FALSE, linetype = &quot;dashed&quot; ) + ggplot2::geom_curve( data = annotation_data, aes(x = 0.32, y = 60, xend = 0.29, yend = 90), curvature = -0.1, color = &#39;black&#39;, linewidth = 0.4, arrow = arrow(length = unit(0.4, &#39;cm&#39;)), inherit.aes = FALSE ) + ggplot2::labs(x = &quot;&quot;, y = &quot;&quot;) leg &lt;- cowplot::get_legend(p2 + ggplot2::theme( plot.margin = unit(c(2, 0, 0, 0.9), &quot;cm&quot;), # legend.title = ggplot2::element_text(size = 11), legend.position = &quot;right&quot;, legend.direction = &quot;vertical&quot;, legend.justification = &quot;right&quot;, legend.box.just = &quot;right&quot;, legend.background = element_rect(fill = &quot;transparent&quot;, colour = NA), legend.box.background = element_rect(fill = &quot;transparent&quot;, colour = NA) )) base_plot &lt;- cowplot::plot_grid( p2 + theme( legend.position = &quot;none&quot;, plot.margin = unit(c(-0.2, 0.5, 0, 0.9), &quot;cm&quot;) ), ncol = 1, labels = c(&quot;A&quot;, &quot;B&quot;), hjust = -3.5, vjust = 1.2, align = &quot;v&quot; ) grid &lt;- cowplot::plot_grid( base_plot, nrow = 1 ) pp1 &lt;- cowplot::ggdraw() + cowplot::draw_plot(grid) + cowplot::draw_label(&quot;Mesh size (mm)&quot;, x = 0.03, y = 0.7, angle = 90, hjust = 1, size = 12) sha_Mag &lt;- shapviz::shapviz(timor.nutrients::shap_results$model_timor_AG) process_shap &lt;- sha_Mag %&gt;% purrr::map(get_shaps, model_type = &quot;ag&quot;) %&gt;% dplyr::bind_rows(.id = &quot;profile&quot;) %&gt;% tidyr::separate(habitat_gear_fact, into = c(&quot;habitat&quot;, &quot;gear_fact&quot;), sep = &quot;_&quot;) %&gt;% dplyr::mutate( gear_fact = stringr::str_to_title(gear_fact), profile = stringr::str_replace(profile, &quot;.pred_&quot;, &quot;FNP-&quot;), habitat_gear_fact = paste0(habitat, &quot; x &quot;, gear_fact), habitat_gear_fact = stringr::str_replace(habitat_gear_fact, &quot;Deep&quot;, &quot;Pelagic&quot;) ) to_group &lt;- process_shap %&gt;% dplyr::mutate( zero_dist = 0 - abs(gear_fact_shap) ) %&gt;% dplyr::group_by(gear_fact) %&gt;% dplyr::summarise(zero_dist = mean(zero_dist)) %&gt;% dplyr::slice_max(order_by = zero_dist, n = 15) %&gt;% magrittr::extract2(&quot;gear_fact&quot;) annotation_data &lt;- data.frame( profile = &quot;FNP-2&quot;, x = 0.171, y = 5.3, label = &#39;Long lines in pelagic, FADs\\nand magroves areas boost chances\\nof obtaining FNP-2 profile&#39; ) p2 &lt;- process_shap %&gt;% dplyr::mutate(gear_fact_shap = ifelse(gear_fact_shap %in% to_group, &quot;Others&quot;, gear_fact_shap)) %&gt;% dplyr::group_by(profile, gear_fact, habitat_fact) %&gt;% dplyr::summarise(gear_fact_shap = median(gear_fact_shap, na.rm = TRUE)) %&gt;% dplyr::ungroup() %&gt;% dplyr::filter(gear_fact_shap &gt; 0) %&gt;% dplyr::mutate(habitat_fact = dplyr::case_when(habitat_fact == &quot;Deep&quot; ~ &quot;Pelagic&quot;, TRUE ~ habitat_fact)) %&gt;% ggplot2::ggplot(ggplot2::aes(gear_fact_shap, gear_fact, color = habitat_fact)) + facet_grid(. ~ profile, scales = &quot;free&quot;) + ggplot2::geom_point(ggplot2::aes(alpha = sqrt(gear_fact_shap), size = gear_fact_shap)) + ggpubr::theme_pubr(border = TRUE) + ggplot2::scale_color_manual(values = c(&quot;#f28f3b&quot;, &quot;#c27ba0&quot;, &quot;#ffd5c2&quot;, &quot;#588b8b&quot;, &quot;#c8553d&quot;, &quot;#2d3047&quot;, &quot;#007ea7&quot;)) + ggplot2::coord_cartesian(expand = TRUE) + ggplot2::scale_x_continuous(n.breaks = 4) + ggplot2::labs(color = &quot;Habitat&quot;) + ggplot2::theme( panel.grid = ggplot2::element_blank(), strip.background = ggplot2::element_blank(), strip.text.x = ggplot2::element_text(face = &quot;bold&quot;) ) + ggplot2::geom_text( data = annotation_data, aes(x = x, y = y, label = label), size = 3, fontface = &quot;plain&quot;, inherit.aes = FALSE ) + ggplot2::geom_curve( data = annotation_data, aes(x = 0.174, y = 3, xend = 0.172, yend = 4.2), curvature = -0.2, color = &#39;black&#39;, linewidth = 0.4, arrow = arrow(length = unit(0.4, &#39;cm&#39;)), inherit.aes = FALSE ) + ggplot2::geom_rect( data = annotation_data, aes(xmin = 0.1745, xmax = 0.178, ymin = 2.5, ymax = 3.5), fill = &quot;white&quot;, alpha = 0.2, color = &quot;black&quot;, inherit.aes = FALSE, linetype = &quot;dashed&quot; ) + ggplot2::guides( color = ggplot2::guide_legend(override.aes = list(size = 3)), alpha = &quot;none&quot;, size = &quot;none&quot; ) + ggplot2::labs(x = &quot;&quot;, y = &quot;&quot;) leg &lt;- cowplot::get_legend(p2 + ggplot2::theme( plot.margin = unit(c(2, 0, 0, 0.9), &quot;cm&quot;), # legend.title = ggplot2::element_text(size = 11), legend.position = &quot;right&quot;, legend.direction = &quot;vertical&quot;, legend.justification = &quot;right&quot;, legend.box.just = &quot;right&quot;, legend.background = element_rect(fill = &quot;transparent&quot;, colour = NA), legend.box.background = element_rect(fill = &quot;transparent&quot;, colour = NA) )) base_plot &lt;- cowplot::plot_grid( p2 + theme( legend.position = &quot;none&quot;, plot.margin = unit(c(-0.2, 0.5, 0, 0.9), &quot;cm&quot;) ), ncol = 1, labels = c(&quot;B&quot;, &quot;D&quot;), hjust = -3.5, vjust = 1.2, align = &quot;v&quot; ) grid &lt;- cowplot::plot_grid( base_plot, nrow = 1 ) pp2 &lt;- cowplot::ggdraw(ylim = c(-.05, NA)) + cowplot::draw_plot(grid) + cowplot::draw_label(&quot;Gear type&quot;, x = 0.03, y = 0.7, angle = 90, hjust = 1, size = 12) + cowplot::draw_label(&quot;Impact on model output (SHAP value)&quot;, x = 0.5, y = 0, size = 12) # Extract the shared legend with larger text and key sizes shared_legend &lt;- cowplot::get_legend( p2 + ggplot2::theme( legend.position = &quot;right&quot;, # Position the legend on the right legend.direction = &quot;vertical&quot;, # Vertical orientation legend.justification = &quot;center&quot;, legend.box.just = &quot;center&quot;, legend.text = ggplot2::element_text(size = 12), # Increase text size legend.title = ggplot2::element_text(size = 14), # Increase title size legend.key.size = unit(1.5, &quot;lines&quot;), # Increase legend key size legend.background = ggplot2::element_rect(fill = &quot;transparent&quot;, colour = NA), legend.box.background = ggplot2::element_rect(fill = &quot;transparent&quot;, colour = NA) ) ) # Remove legends from individual plots pp1_no_legend &lt;- pp1 + ggplot2::theme(legend.position = &quot;none&quot;) pp2_no_legend &lt;- pp2 + ggplot2::theme(legend.position = &quot;none&quot;) # Combine the two plots vertically without legends plots_combined &lt;- cowplot::plot_grid( pp1_no_legend, pp2_no_legend, align = &quot;v&quot;, # Align the plots vertically ncol = 1, # Stack in one column rel_heights = c(1, 1) # Adjust heights if necessary ) # Add the shared legend to the right final_plot &lt;- cowplot::plot_grid( plots_combined, shared_legend, ncol = 2, # Add legend to the right of the plots rel_widths = c(3, 0.5) # Adjust widths for the plots and legend ) # Display the final plot print(final_plot) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
